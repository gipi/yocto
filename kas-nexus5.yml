---
header:
  version: 4

machine: "nexus5"

repos:
  poky:
    url: "https://git.yoctoproject.org/git/poky"
    refspec: zeus
    layers:
      meta:
      meta-poky:
      meta-yocto-bsp:
  meta-openembedded:
    url: "https://github.com/openembedded/meta-openembedded.git"
    refspec: zeus
    layers:
      meta-oe:
      meta-python:
      meta-networking:
  meta-qcom:
    url: "https://github.com/ndechesne/meta-qcom"
    refspec: zeus
  meta-mender:
    url: "https://github.com/mendersoftware/meta-mender.git"
    refspec: zeus
    layers:
      meta-mender-core:
  meta-mender-community:
    url: "https://github.com/mendersoftware/meta-mender-community.git"
    refspec: zeus
    layers:
      meta-mender-beaglebone:

bblayers_conf_header:
  bbb-cip: |
    POKY_BBLAYERS_CONF_VERSION = "2"
    BBPATH = "${TOPDIR}"
    BBFILES ?= ""
local_conf_header:
  bbb-cip: |
    DISTRO ?= "poky"
    CONF_VERSION = "1"
    PATCHRESOLVE = "noop"
    SSTATE_DIR ?= "${TOPDIR}/sstate-cache"
    DL_DIR ?= "${TOPDIR}/downloads"
    TMPDIR ?= "${TOPDIR}/tmp"

    PACKAGE_CLASSES ?= "package_deb"


    ## Add systemd service
    VIRTUAL-RUNTIME_init_manager = "systemd"
    VIRTUAL-RUNTIME_dev_manager = "systemd"
    DISTRO_FEATURES_BACKFILL_CONSIDERED = "sysvinit"
    VIRTUAL-RUNTIME_initscripts = ""

    CORE_IMAGE_EXTRA_INSTALL_append = " vim rsync rsnapshot"
    EXTRA_IMAGE_FEATURES = "debug-tweaks"
    IMAGE_FEATURES_append = " package-management"
    DISTRO_FEATURES_remove = " nfs"

    PREFERRED_PROVIDER_virtual/libgl = "mesa"

    # to remove rpcbind (it's memory consuming and useless)
    RDEPENDS_packagegroup-core-full-cmdline-sys-services_remove = "nfs-utils rpcbind"
    ## INHERIT += "extrausers"
    ## EXTRA_USERS_PARAMS = "usermod -P root root;"

    ## MACHINE ??= "beaglebone"
    ## DISTRO ??= "poky"
    ## BBMULTICONFIG ?= ""
    # https://docs.mender.io/system-updates-yocto-project/build-for-demo
    # The name of the disk image and Artifact that will be built.
    # This is what the device will report that it is running, and different updates
    # must have different names because Mender will skip installation of an Artifact
    # if it is already installed.
    MENDER_ARTIFACT_NAME = "02-rsnapshot-missing-dependencies"

    MENDER_FEATURES_DISABLE_append = " mender-systemd"
    
    # INHERIT += "mender-full"
    # This really saves a lot of disk space!
    INHERIT += "rm_work"

    DISTRO_FEATURES_append = " systemd"
    DISTRO_FEATURES_remove = "nfs"
    VIRTUAL-RUNTIME_init_manager = "systemd"
    DISTRO_FEATURES_BACKFILL_CONSIDERED = "sysvinit"
    VIRTUAL-RUNTIME_initscripts = ""
    ARTIFACTIMG_FSTYPE = "ext4"
    # MENDER_IMAGE_ROOTFS_SIZE = "200000000"

    # Mender storage configuration
    #
    # More details on these variables is available at
    #    https://docs.mender.io/devices/yocto-project/partition-configuration#configuring-storage
    #
    # Also, please be sure to check other config files as other
    # layers, config fragments, etc may attempt to set values
    # for specific platforms.  Using "bitbake -e <image-name>"
    # can help determine which files are setting these values
    # in a given configuration.
    #
    MENDER_STORAGE_TOTAL_SIZE_MB = "7600"
    # MENDER_BOOT_PART_SIZE_MB = "16"
    MENDER_DATA_PART_SIZE_MB = "6000"
    # MENDER_STORAGE_DEVICE = "/dev/mmcblk0"
    # MENDER_BOOT_PART = "${MENDER_STORAGE_DEVICE_BASE}1"
    # MENDER_DATA_PART = "${MENDER_STORAGE_DEVICE_BASE}4"
    # MENDER_ROOTFS_PART_A = "${MENDER_STORAGE_DEVICE_BASE}2"
    # MENDER_ROOTFS_PART_B = "${MENDER_STORAGE_DEVICE_BASE}3"
    #
    #
    # Disk Space Monitoring during the build
    #
    # Monitor the disk space during the build. If there is less that 1GB of space or less
    # than 100K inodes in any key build location (TMPDIR, DL_DIR, SSTATE_DIR), gracefully
    # shutdown the build. If there is less that 100MB or 1K inodes, perform a hard abort
    # of the build. The reason for this is that running completely out of space can corrupt
    # files and damages the build in ways which may not be easily recoverable.
    # It's necesary to monitor /tmp, if there is no space left the build will fail
    # with very exotic errors.
    BB_DISKMON_DIRS ??= "\
        STOPTASKS,${TMPDIR},1G,100K \
        STOPTASKS,${DL_DIR},1G,100K \
        STOPTASKS,${SSTATE_DIR},1G,100K \
        STOPTASKS,/tmp,100M,100K \
        ABORT,${TMPDIR},100M,1K \
        ABORT,${DL_DIR},100M,1K \
        ABORT,${SSTATE_DIR},100M,1K \
        ABORT,/tmp,10M,1K"
